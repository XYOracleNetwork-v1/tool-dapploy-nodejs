{
  "contractName": "ERC20Adapter",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x32424aa3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb09f1266"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd28d8852"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint256"
        },
        {
          "name": "supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint256\"},{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Basic implementation of ERC20 with initial supply\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Basic ERC20 Adapter\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/ERC20Adapter.sol\":\"ERC20Adapter\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/ERC20Adapter.sol\":{\"keccak256\":\"0xdcc5b642853319ee391e05c82bb24114ab9cc6b7c2cc8a0590f1d251b22a01b8\",\"urls\":[\"bzzr://76895b63d52fd71f00667096b4eaa276275d140a044ab40fedb51946d90a81db\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/Roles.sol\":{\"keccak256\":\"0xa30e5f668ab6f9079aaae2271e42d97c058d59651cb07028d3e44b8e1acdc96a\",\"urls\":[\"bzzr://c56f8b2dcdf5e02fcd5ada3f178f05b71c74e88e29bdc1fe64074293cc9be0c0\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x07f254396554f3dd46d073769ff862fe914d71895cfdd92722537e77c38b166f\",\"urls\":[\"bzzr://6c4112098c87d84d52166aa8c646d48494e8191e15da3065679737eb3828aa65\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc31006228f03130fa677c7e7769b8fd0b1c5257deedae3fc278eb542b33c3059\",\"urls\":[\"bzzr://261b657d8d26013b2d3f95554f7f2ec853851ceec6333940d016feadff8b435a\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x81dd4c59df675b77477ab7664802174cf8f2ccb3400b69960d1c47b5ff6f4899\",\"urls\":[\"bzzr://a49fb52477c644071e73e8a84f3486ea0955270d0c9a1c00c543957ee7119346\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xeeacb7ae762f1505d5481d692c262b05334107920186bf029eaab67994d7b42c\",\"urls\":[\"bzzr://905d081f40db4205aaa8a252991681658e680ed86f19cc4f73033dfd26bb9454\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x44c46ef4a8099c5cc0cbc85c55dccc33481d69b9f1f10f9fe45e49394780b8d5\",\"urls\":[\"bzzr://8e7fcb5849e3955bb5d2698baf3e526a14344d26db92422e9c70c71ef83429ef\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000e8738038062000e87833981018060405260808110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50506020820151604090920151909350909150620000f23364010000000062000149810204565b8351620001079060049060208701906200036a565b5082516200011d9060059060208601906200036a565b5060068290556200013e33600a84900a83026401000000006200019b810204565b50505050506200040f565b62000164600382640100000000620009a2620001db82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6000620001b13364010000000062000236810204565b1515620001bd57600080fd5b620001d2838364010000000062000259810204565b50600192915050565b600160a060020a0381161515620001f157600080fd5b62000206828264010000000062000318810204565b156200021157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000620002536003836401000000006200096b6200031882021704565b92915050565b600160a060020a03821615156200026f57600080fd5b6002546200028c9082640100000000620008186200035082021704565b600255600160a060020a038216600090815260208190526040902054620002c29082640100000000620008186200035082021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000600160a060020a03821615156200033057600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6000828201838110156200036357600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003ad57805160ff1916838001178555620003dd565b82800160010185558215620003dd579182015b82811115620003dd578251825591602001919060010190620003c0565b50620003eb929150620003ef565b5090565b6200040c91905b80821115620003eb5760008155600101620003f6565b90565b610a68806200041f6000396000f3fe6080604052600436106100da5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100df57806318160ddd1461012c57806323b872dd1461015357806332424aa31461019657806339509351146101ab57806340c10f19146101e457806370a082311461021d578063983b2d56146102505780639865027514610285578063a457c2d71461029a578063a9059cbb146102d3578063aa271e1a1461030c578063b09f12661461033f578063d28d8852146103c9578063dd62ed3e146103de575b600080fd5b3480156100eb57600080fd5b506101186004803603604081101561010257600080fd5b50600160a060020a038135169060200135610419565b604080519115158252519081900360200190f35b34801561013857600080fd5b5061014161042f565b60408051918252519081900360200190f35b34801561015f57600080fd5b506101186004803603606081101561017657600080fd5b50600160a060020a03813581169160208101359091169060400135610435565b3480156101a257600080fd5b5061014161048c565b3480156101b757600080fd5b50610118600480360360408110156101ce57600080fd5b50600160a060020a038135169060200135610492565b3480156101f057600080fd5b506101186004803603604081101561020757600080fd5b50600160a060020a0381351690602001356104ce565b34801561022957600080fd5b506101416004803603602081101561024057600080fd5b5035600160a060020a03166104ee565b34801561025c57600080fd5b506102836004803603602081101561027357600080fd5b5035600160a060020a0316610509565b005b34801561029157600080fd5b50610283610529565b3480156102a657600080fd5b50610118600480360360408110156102bd57600080fd5b50600160a060020a038135169060200135610534565b3480156102df57600080fd5b50610118600480360360408110156102f657600080fd5b50600160a060020a038135169060200135610570565b34801561031857600080fd5b506101186004803603602081101561032f57600080fd5b5035600160a060020a031661057d565b34801561034b57600080fd5b50610354610596565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561038e578181015183820152602001610376565b50505050905090810190601f1680156103bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103d557600080fd5b50610354610624565b3480156103ea57600080fd5b506101416004803603604081101561040157600080fd5b50600160a060020a038135811691602001351661067f565b60006104263384846106aa565b50600192915050565b60025490565b6000610442848484610736565b600160a060020a03841660009081526001602090815260408083203380855292529091205461048291869161047d908663ffffffff61080316565b6106aa565b5060019392505050565b60065481565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161042691859061047d908663ffffffff61081816565b60006104d93361057d565b15156104e457600080fd5b6104268383610831565b600160a060020a031660009081526020819052604090205490565b6105123361057d565b151561051d57600080fd5b610526816108db565b50565b61053233610923565b565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161042691859061047d908663ffffffff61080316565b6000610426338484610736565b600061059060038363ffffffff61096b16565b92915050565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b505050505081565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061c5780601f106105f15761010080835404028352916020019161061c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03821615156106bf57600080fd5b600160a060020a03831615156106d457600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561074b57600080fd5b600160a060020a038316600090815260208190526040902054610774908263ffffffff61080316565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107a9908263ffffffff61081816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561081257600080fd5b50900390565b60008282018381101561082a57600080fd5b9392505050565b600160a060020a038216151561084657600080fd5b600254610859908263ffffffff61081816565b600255600160a060020a038216600090815260208190526040902054610885908263ffffffff61081816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6108ec60038263ffffffff6109a216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61093460038263ffffffff6109f016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561098257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156109b757600080fd5b6109c1828261096b565b156109cb57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610a0557600080fd5b610a0f828261096b565b1515610a1a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820de983a7ce288069006a23b9914200bde873543729e17058a74796f6a21d4ffa00029",
  "deployedBytecode": "0x6080604052600436106100da5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100df57806318160ddd1461012c57806323b872dd1461015357806332424aa31461019657806339509351146101ab57806340c10f19146101e457806370a082311461021d578063983b2d56146102505780639865027514610285578063a457c2d71461029a578063a9059cbb146102d3578063aa271e1a1461030c578063b09f12661461033f578063d28d8852146103c9578063dd62ed3e146103de575b600080fd5b3480156100eb57600080fd5b506101186004803603604081101561010257600080fd5b50600160a060020a038135169060200135610419565b604080519115158252519081900360200190f35b34801561013857600080fd5b5061014161042f565b60408051918252519081900360200190f35b34801561015f57600080fd5b506101186004803603606081101561017657600080fd5b50600160a060020a03813581169160208101359091169060400135610435565b3480156101a257600080fd5b5061014161048c565b3480156101b757600080fd5b50610118600480360360408110156101ce57600080fd5b50600160a060020a038135169060200135610492565b3480156101f057600080fd5b506101186004803603604081101561020757600080fd5b50600160a060020a0381351690602001356104ce565b34801561022957600080fd5b506101416004803603602081101561024057600080fd5b5035600160a060020a03166104ee565b34801561025c57600080fd5b506102836004803603602081101561027357600080fd5b5035600160a060020a0316610509565b005b34801561029157600080fd5b50610283610529565b3480156102a657600080fd5b50610118600480360360408110156102bd57600080fd5b50600160a060020a038135169060200135610534565b3480156102df57600080fd5b50610118600480360360408110156102f657600080fd5b50600160a060020a038135169060200135610570565b34801561031857600080fd5b506101186004803603602081101561032f57600080fd5b5035600160a060020a031661057d565b34801561034b57600080fd5b50610354610596565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561038e578181015183820152602001610376565b50505050905090810190601f1680156103bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103d557600080fd5b50610354610624565b3480156103ea57600080fd5b506101416004803603604081101561040157600080fd5b50600160a060020a038135811691602001351661067f565b60006104263384846106aa565b50600192915050565b60025490565b6000610442848484610736565b600160a060020a03841660009081526001602090815260408083203380855292529091205461048291869161047d908663ffffffff61080316565b6106aa565b5060019392505050565b60065481565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161042691859061047d908663ffffffff61081816565b60006104d93361057d565b15156104e457600080fd5b6104268383610831565b600160a060020a031660009081526020819052604090205490565b6105123361057d565b151561051d57600080fd5b610526816108db565b50565b61053233610923565b565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161042691859061047d908663ffffffff61080316565b6000610426338484610736565b600061059060038363ffffffff61096b16565b92915050565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b505050505081565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561061c5780601f106105f15761010080835404028352916020019161061c565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03821615156106bf57600080fd5b600160a060020a03831615156106d457600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561074b57600080fd5b600160a060020a038316600090815260208190526040902054610774908263ffffffff61080316565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107a9908263ffffffff61081816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561081257600080fd5b50900390565b60008282018381101561082a57600080fd5b9392505050565b600160a060020a038216151561084657600080fd5b600254610859908263ffffffff61081816565b600255600160a060020a038216600090815260208190526040902054610885908263ffffffff61081816565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6108ec60038263ffffffff6109a216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61093460038263ffffffff6109f016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561098257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156109b757600080fd5b6109c1828261096b565b156109cb57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610a0557600080fd5b610a0f828261096b565b1515610a1a57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820de983a7ce288069006a23b9914200bde873543729e17058a74796f6a21d4ffa00029",
  "sourceMap": "172:357:0:-;;;289:238;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:238:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;289:238:0;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;289:238:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;289:238:0;;;;;;;;;;;-1:-1:-1;289:238:0;;-1:-1:-1;283:22:4;294:10;283;;;;:22;:::i;:::-;415:12:0;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;433:16:0;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;455:9:0;:20;;;481:41;486:10;508:2;:12;;;498:23;;481:4;;;;:41;:::i;:::-;;289:238;;;;172:357;;693:119:4;749:21;:8;762:7;749:12;;;;;;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;451:128:28:-;519:4;358:20:4;367:10;358:8;;;;:20;:::i;:::-;350:29;;;;;;;;535:16:28;541:2;545:5;535;;;;:16;:::i;:::-;-1:-1:-1;568:4:28;451:128;;;;:::o;267:181:2:-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;;;;:18;:::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;403:107:4:-;459:4;482:21;:8;495:7;482:12;;;;;;:21;:::i;:::-;475:28;403:107;-1:-1:-1;;403:107:4:o;5822:263:24:-;-1:-1:-1;;;;;5896:21:24;;;;5888:30;;;;;;5944:12;;:23;;5961:5;5944:16;;;;;;:23;:::i;:::-;5929:12;:38;-1:-1:-1;;;;;5998:18:24;;:9;:18;;;;;;;;;;;:29;;6021:5;5998:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;5977:18:24;;:9;:18;;;;;;;;;;;:50;;;;6042:36;;;;;;;5977:18;;:9;;6042:36;;;;;;;;;;5822:263;;:::o;794:162:2:-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;1447:145:21:-;1505:7;1536:5;;;1559:6;;;;1551:15;;;;;;1584:1;1447:145;-1:-1:-1;;;1447:145:21:o;172:357:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:357:0;;;-1:-1:-1;172:357:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "172:357:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:145:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2729:145:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2729:145:24;;;;;;;;;;;;;;;;;;;;;;;;;;;924:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;924:89:24;;;;;;;;;;;;;;;;;;;;3337:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:224:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3337:224:24;;;;;;;;;;;;;;;;;;263:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:21:0;;;;4075:200:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4075:200:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4075:200:24;;;;;;;;;451:128:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:128:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;451:128:28;;;;;;;;;1225:104:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:104:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1225:104:24;-1:-1:-1;;;;;1225:104:24;;;516:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:90:4;-1:-1:-1;;;;;516:90:4;;;;;612:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:75:4;;;;4794:210:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4794:210:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4794:210:24;;;;;;;;;1956:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:137:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1956:137:24;;;;;;;;;403:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;403:107:4;-1:-1:-1;;;;;403:107:4;;;238:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;238:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:19:0;;;;1660:129:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:129:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1660:129:24;;;;;;;;;;;2729:145;2794:4;2810:36;2819:10;2831:7;2840:5;2810:8;:36::i;:::-;-1:-1:-1;2863:4:24;2729:145;;;;:::o;924:89::-;994:12;;924:89;:::o;3337:224::-;3416:4;3432:26;3442:4;3448:2;3452:5;3432:9;:26::i;:::-;-1:-1:-1;;;;;3495:14:24;;;;;;:8;:14;;;;;;;;3483:10;3495:26;;;;;;;;;3468:65;;3477:4;;3495:37;;3526:5;3495:37;:30;:37;:::i;:::-;3468:8;:65::i;:::-;-1:-1:-1;3550:4:24;3337:224;;;;;:::o;263:21:0:-;;;;:::o;4075:200:24:-;4180:10;4155:4;4201:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4201:29:24;;;;;;;;;;4155:4;;4171:76;;4192:7;;4201:45;;4235:10;4201:45;:33;:45;:::i;451:128:28:-;519:4;358:20:4;367:10;358:8;:20::i;:::-;350:29;;;;;;;;535:16:28;541:2;545:5;535;:16::i;1225:104:24:-;-1:-1:-1;;;;;1306:16:24;1280:7;1306:16;;;;;;;;;;;;1225:104::o;516:90:4:-;358:20;367:10;358:8;:20::i;:::-;350:29;;;;;;;;580:19;591:7;580:10;:19::i;:::-;516:90;:::o;612:75::-;655:25;669:10;655:13;:25::i;:::-;612:75::o;4794:210:24:-;4904:10;4879:4;4925:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4925:29:24;;;;;;;;;;4879:4;;4895:81;;4916:7;;4925:50;;4959:15;4925:50;:33;:50;:::i;1956:137::-;2017:4;2033:32;2043:10;2055:2;2059:5;2033:9;:32::i;403:107:4:-;459:4;482:21;:8;495:7;482:21;:12;:21;:::i;:::-;475:28;403:107;-1:-1:-1;;403:107:4:o;238:21:0:-;;;;;;;;;;;;;;;-1:-1:-1;;238:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;215:19::-;;;;;;;;;;;;;;;-1:-1:-1;;215:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:129:24;-1:-1:-1;;;;;1758:15:24;;;1732:7;1758:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1660:129::o;6839:248::-;-1:-1:-1;;;;;6931:21:24;;;;6923:30;;;;;;-1:-1:-1;;;;;6971:19:24;;;;6963:28;;;;;;-1:-1:-1;;;;;7002:15:24;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7049:31;;;;;;;;;;;;;;;;;6839:248;;;:::o;5223:256::-;-1:-1:-1;;;;;5310:16:24;;;;5302:25;;;;;;-1:-1:-1;;;;;5356:15:24;;:9;:15;;;;;;;;;;;:26;;5376:5;5356:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5338:15:24;;;:9;:15;;;;;;;;;;;:44;;;;5408:13;;;;;;;:24;;5426:5;5408:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5392:13:24;;;:9;:13;;;;;;;;;;;;:40;;;;5447:25;;;;;;;5392:13;;5447:25;;;;;;;;;;;;;5223:256;;;:::o;1219:145:21:-;1277:7;1304:6;;;;1296:15;;;;;;-1:-1:-1;1333:5:21;;;1219:145::o;1447:::-;1505:7;1536:5;;;1559:6;;;;1551:15;;;;;;1584:1;1447:145;-1:-1:-1;;;1447:145:21:o;5822:263:24:-;-1:-1:-1;;;;;5896:21:24;;;;5888:30;;;;;;5944:12;;:23;;5961:5;5944:23;:16;:23;:::i;:::-;5929:12;:38;-1:-1:-1;;;;;5998:18:24;;:9;:18;;;;;;;;;;;:29;;6021:5;5998:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5977:18:24;;:9;:18;;;;;;;;;;;:50;;;;6042:36;;;;;;;5977:18;;:9;;6042:36;;;;;;;;;;5822:263;;:::o;693:119:4:-;749:21;:8;762:7;749:21;:12;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;818:127::-;877:24;:8;893:7;877:24;:15;:24;:::i;:::-;916:22;;-1:-1:-1;;;;;916:22:4;;;;;;;;818:127;:::o;794:162:2:-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;267:181::-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;:18::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;522:184::-;-1:-1:-1;;;;;601:21:2;;;;593:30;;;;;;641:18;645:4;651:7;641:3;:18::i;:::-;633:27;;;;;;;;-1:-1:-1;;;;;671:20:2;694:5;671:20;;;;;;;;;;;:28;;-1:-1:-1;;671:28:2;;;522:184::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./token/ERC20/ERC20Mintable.sol\";\n\n/**\n * @title Basic ERC20 Adapter\n * @dev Basic implementation of ERC20 with initial supply\n */\ncontract ERC20Adapter is ERC20Mintable {\n  string public _name;\n  string public _symbol;\n  uint public _decimals;\n\n  constructor (\n    string memory name, \n    string memory symbol, \n    uint decimals, \n    uint supply\n  )\n    public \n  {\n    _name = name;\n    _symbol = symbol;\n    _decimals = decimals;\n    mint(msg.sender, supply * (10**decimals));\n  }\n}",
  "sourcePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/ERC20Adapter.sol",
  "ast": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/ERC20Adapter.sol",
    "exportedSymbols": {
      "ERC20Adapter": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./token/ERC20/ERC20Mintable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 47,
        "sourceUnit": 2987,
        "src": "33:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2986,
              "src": "197:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2986",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:0"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          2986,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title Basic ERC20 Adapter\n@dev Basic implementation of ERC20 with initial supply",
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46,
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Adapter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "215:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "215:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "238:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "238:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "263:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "263:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "409:118:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "415:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "423:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "415:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "415:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "433:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "443:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "433:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "433:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "455:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "467:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "455:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "455:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4750,
                          "src": "486:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "486:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "498:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "508:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 38,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "512:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "508:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 40,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "507:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "498:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2985,
                      "src": "481:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "481:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "307:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "332:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "359:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "379:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:93:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:0"
            },
            "scope": 46,
            "src": "289:238:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "172:357:0"
      }
    ],
    "src": "0:529:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/ERC20Adapter.sol",
    "exportedSymbols": {
      "ERC20Adapter": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./token/ERC20/ERC20Mintable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 47,
        "sourceUnit": 2987,
        "src": "33:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2986,
              "src": "197:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2986",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "197:13:0"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          2986,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title Basic ERC20 Adapter\n@dev Basic implementation of ERC20 with initial supply",
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46,
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Adapter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "215:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "215:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "238:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "238:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "263:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "263:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "409:118:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "415:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "423:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "415:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "415:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "433:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "443:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "433:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "433:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 29,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "455:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "467:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "455:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "455:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4750,
                          "src": "486:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "486:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "498:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "508:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 38,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "512:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "508:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 40,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "507:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "498:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2985,
                      "src": "481:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "481:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "307:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "332:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "359:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "379:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:93:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:0"
            },
            "scope": 46,
            "src": "289:238:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "172:357:0"
      }
    ],
    "src": "0:529:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeffDAa2738DD67525DBef75Baed996443Ae0e527",
      "transactionHash": "0xca78ba8fade3eea962c24139507736a5f2eb38a519de7d118394d9e16b61d8cd"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-08T18:19:56.269Z",
  "devdoc": {
    "details": "Basic implementation of ERC20 with initial supply",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Basic ERC20 Adapter"
  },
  "userdoc": {
    "methods": {}
  }
}