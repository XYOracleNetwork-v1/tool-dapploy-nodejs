{
  "contractName": "ERC20Capped",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "cap",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Mintable token with a token cap.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Capped token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/Roles.sol\":{\"keccak256\":\"0xa30e5f668ab6f9079aaae2271e42d97c058d59651cb07028d3e44b8e1acdc96a\",\"urls\":[\"bzzr://c56f8b2dcdf5e02fcd5ada3f178f05b71c74e88e29bdc1fe64074293cc9be0c0\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x07f254396554f3dd46d073769ff862fe914d71895cfdd92722537e77c38b166f\",\"urls\":[\"bzzr://6c4112098c87d84d52166aa8c646d48494e8191e15da3065679737eb3828aa65\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc31006228f03130fa677c7e7769b8fd0b1c5257deedae3fc278eb542b33c3059\",\"urls\":[\"bzzr://261b657d8d26013b2d3f95554f7f2ec853851ceec6333940d016feadff8b435a\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x81dd4c59df675b77477ab7664802174cf8f2ccb3400b69960d1c47b5ff6f4899\",\"urls\":[\"bzzr://a49fb52477c644071e73e8a84f3486ea0955270d0c9a1c00c543957ee7119346\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0xa51d81c7f19c8d6a9ea05d14f900048608674ffe7e1274c6d92fa96cc463512b\",\"urls\":[\"bzzr://1b1981c00678ed09b08ff27047d417e9114262139bcc57dfcd7a9fd8fa52d0ba\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xeeacb7ae762f1505d5481d692c262b05334107920186bf029eaab67994d7b42c\",\"urls\":[\"bzzr://905d081f40db4205aaa8a252991681658e680ed86f19cc4f73033dfd26bb9454\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x44c46ef4a8099c5cc0cbc85c55dccc33481d69b9f1f10f9fe45e49394780b8d5\",\"urls\":[\"bzzr://8e7fcb5849e3955bb5d2698baf3e526a14344d26db92422e9c70c71ef83429ef\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610a438339810180604052602081101561003057600080fd5b505161004433640100000000610059810204565b6000811161005157600080fd5b600455610136565b6100716003826401000000006108386100a882021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156100bd57600080fd5b6100d082826401000000006100ff810204565b156100da57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a038216151561011657600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6108fe806101456000396000f3fe6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d578063355274ea14610180578063395093511461019557806340c10f19146101ce57806370a0823114610207578063983b2d561461023a578063986502751461026f578063a457c2d714610284578063a9059cbb146102bd578063aa271e1a146102f6578063dd62ed3e14610329575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610364565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b61037a565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a03813581169160208101359091169060400135610380565b34801561018c57600080fd5b5061012b6103d7565b3480156101a157600080fd5b50610102600480360360408110156101b857600080fd5b50600160a060020a0381351690602001356103dd565b3480156101da57600080fd5b50610102600480360360408110156101f157600080fd5b50600160a060020a038135169060200135610419565b34801561021357600080fd5b5061012b6004803603602081101561022a57600080fd5b5035600160a060020a0316610439565b34801561024657600080fd5b5061026d6004803603602081101561025d57600080fd5b5035600160a060020a0316610454565b005b34801561027b57600080fd5b5061026d610474565b34801561029057600080fd5b50610102600480360360408110156102a757600080fd5b50600160a060020a03813516906020013561047f565b3480156102c957600080fd5b50610102600480360360408110156102e057600080fd5b50600160a060020a0381351690602001356104bb565b34801561030257600080fd5b506101026004803603602081101561031957600080fd5b5035600160a060020a03166104c8565b34801561033557600080fd5b5061012b6004803603604081101561034c57600080fd5b50600160a060020a03813581169160200135166104e1565b600061037133848461050c565b50600192915050565b60025490565b600061038d848484610598565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103cd9186916103c8908663ffffffff61066516565b61050c565b5060019392505050565b60045490565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103719185906103c8908663ffffffff61067a16565b6000610424336104c8565b151561042f57600080fd5b6103718383610693565b600160a060020a031660009081526020819052604090205490565b61045d336104c8565b151561046857600080fd5b610471816106c7565b50565b61047d3361070f565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103719185906103c8908663ffffffff61066516565b6000610371338484610598565b60006104db60038363ffffffff61075716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561052157600080fd5b600160a060020a038316151561053657600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156105ad57600080fd5b600160a060020a0383166000908152602081905260409020546105d6908263ffffffff61066516565b600160a060020a03808516600090815260208190526040808220939093559084168152205461060b908263ffffffff61067a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561067457600080fd5b50900390565b60008282018381101561068c57600080fd5b9392505050565b6004546106ae826106a261037a565b9063ffffffff61067a16565b11156106b957600080fd5b6106c3828261078e565b5050565b6106d860038263ffffffff61083816565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61072060038263ffffffff61088616565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561076e57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03821615156107a357600080fd5b6002546107b6908263ffffffff61067a16565b600255600160a060020a0382166000908152602081905260409020546107e2908263ffffffff61067a16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038116151561084d57600080fd5b6108578282610757565b1561086157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561089b57600080fd5b6108a58282610757565b15156108b057600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208d19ec72fd982adc54ff55d354c90d88dabdf3bdff01bca8114773128236a6b00029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d578063355274ea14610180578063395093511461019557806340c10f19146101ce57806370a0823114610207578063983b2d561461023a578063986502751461026f578063a457c2d714610284578063a9059cbb146102bd578063aa271e1a146102f6578063dd62ed3e14610329575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610364565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b61037a565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a03813581169160208101359091169060400135610380565b34801561018c57600080fd5b5061012b6103d7565b3480156101a157600080fd5b50610102600480360360408110156101b857600080fd5b50600160a060020a0381351690602001356103dd565b3480156101da57600080fd5b50610102600480360360408110156101f157600080fd5b50600160a060020a038135169060200135610419565b34801561021357600080fd5b5061012b6004803603602081101561022a57600080fd5b5035600160a060020a0316610439565b34801561024657600080fd5b5061026d6004803603602081101561025d57600080fd5b5035600160a060020a0316610454565b005b34801561027b57600080fd5b5061026d610474565b34801561029057600080fd5b50610102600480360360408110156102a757600080fd5b50600160a060020a03813516906020013561047f565b3480156102c957600080fd5b50610102600480360360408110156102e057600080fd5b50600160a060020a0381351690602001356104bb565b34801561030257600080fd5b506101026004803603602081101561031957600080fd5b5035600160a060020a03166104c8565b34801561033557600080fd5b5061012b6004803603604081101561034c57600080fd5b50600160a060020a03813581169160200135166104e1565b600061037133848461050c565b50600192915050565b60025490565b600061038d848484610598565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103cd9186916103c8908663ffffffff61066516565b61050c565b5060019392505050565b60045490565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103719185906103c8908663ffffffff61067a16565b6000610424336104c8565b151561042f57600080fd5b6103718383610693565b600160a060020a031660009081526020819052604090205490565b61045d336104c8565b151561046857600080fd5b610471816106c7565b50565b61047d3361070f565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103719185906103c8908663ffffffff61066516565b6000610371338484610598565b60006104db60038363ffffffff61075716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561052157600080fd5b600160a060020a038316151561053657600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156105ad57600080fd5b600160a060020a0383166000908152602081905260409020546105d6908263ffffffff61066516565b600160a060020a03808516600090815260208190526040808220939093559084168152205461060b908263ffffffff61067a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561067457600080fd5b50900390565b60008282018381101561068c57600080fd5b9392505050565b6004546106ae826106a261037a565b9063ffffffff61067a16565b11156106b957600080fd5b6106c3828261078e565b5050565b6106d860038263ffffffff61083816565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61072060038263ffffffff61088616565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561076e57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03821615156107a357600080fd5b6002546107b6908263ffffffff61067a16565b600255600160a060020a0382166000908152602081905260409020546107e2908263ffffffff61067a16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a038116151561084d57600080fd5b6108578282610757565b1561086157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561089b57600080fd5b6108a58282610757565b15156108b057600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208d19ec72fd982adc54ff55d354c90d88dabdf3bdff01bca8114773128236a6b00029",
  "sourceMap": "136:457:26:-;;;207:86;8:9:-1;5:2;;;30:1;27;20:12;5:2;207:86:26;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;207:86:26;283:22:4;294:10;283;;;;:22;:::i;:::-;264:1:26;258:7;;250:16;;;;;;276:4;:10;136:457;;693:119:4;749:21;:8;762:7;749:12;;;;;;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;267:181:2:-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;;;;:18;:::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;794:162::-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;136:457:26:-;;;;;;;",
  "deployedSourceMap": "136:457:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:145:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2729:145:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2729:145:24;;;;;;;;;;;;;;;;;;;;;;;;;;;924:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;924:89:24;;;;;;;;;;;;;;;;;;;;3337:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:224:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3337:224:24;;;;;;;;;;;;;;;;;;361:73:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;361:73:26;;;;4075:200:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4075:200:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4075:200:24;;;;;;;;;451:128:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:128:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;451:128:28;;;;;;;;;1225:104:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:104:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1225:104:24;-1:-1:-1;;;;;1225:104:24;;;516:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:90:4;-1:-1:-1;;;;;516:90:4;;;;;612:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:75:4;;;;4794:210:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4794:210:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4794:210:24;;;;;;;;;1956:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:137:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1956:137:24;;;;;;;;;403:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;403:107:4;-1:-1:-1;;;;;403:107:4;;;1660:129:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:129:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1660:129:24;;;;;;;;;;;2729:145;2794:4;2810:36;2819:10;2831:7;2840:5;2810:8;:36::i;:::-;-1:-1:-1;2863:4:24;2729:145;;;;:::o;924:89::-;994:12;;924:89;:::o;3337:224::-;3416:4;3432:26;3442:4;3448:2;3452:5;3432:9;:26::i;:::-;-1:-1:-1;;;;;3495:14:24;;;;;;:8;:14;;;;;;;;3483:10;3495:26;;;;;;;;;3468:65;;3477:4;;3495:37;;3526:5;3495:37;:30;:37;:::i;:::-;3468:8;:65::i;:::-;-1:-1:-1;3550:4:24;3337:224;;;;;:::o;361:73:26:-;423:4;;361:73;:::o;4075:200:24:-;4180:10;4155:4;4201:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4201:29:24;;;;;;;;;;4155:4;;4171:76;;4192:7;;4201:45;;4235:10;4201:45;:33;:45;:::i;451:128:28:-;519:4;358:20:4;367:10;358:8;:20::i;:::-;350:29;;;;;;;;535:16:28;541:2;545:5;535;:16::i;1225:104:24:-;-1:-1:-1;;;;;1306:16:24;1280:7;1306:16;;;;;;;;;;;;1225:104::o;516:90:4:-;358:20;367:10;358:8;:20::i;:::-;350:29;;;;;;;;580:19;591:7;580:10;:19::i;:::-;516:90;:::o;612:75::-;655:25;669:10;655:13;:25::i;:::-;612:75::o;4794:210:24:-;4904:10;4879:4;4925:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4925:29:24;;;;;;;;;;4879:4;;4895:81;;4916:7;;4925:50;;4959:15;4925:50;:33;:50;:::i;1956:137::-;2017:4;2033:32;2043:10;2055:2;2059:5;2033:9;:32::i;403:107:4:-;459:4;482:21;:8;495:7;482:21;:12;:21;:::i;:::-;475:28;403:107;-1:-1:-1;;403:107:4:o;1660:129:24:-;-1:-1:-1;;;;;1758:15:24;;;1732:7;1758:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1660:129::o;6839:248::-;-1:-1:-1;;;;;6931:21:24;;;;6923:30;;;;;;-1:-1:-1;;;;;6971:19:24;;;;6963:28;;;;;;-1:-1:-1;;;;;7002:15:24;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7049:31;;;;;;;;;;;;;;;;;6839:248;;;:::o;5223:256::-;-1:-1:-1;;;;;5310:16:24;;;;5302:25;;;;;;-1:-1:-1;;;;;5356:15:24;;:9;:15;;;;;;;;;;;:26;;5376:5;5356:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5338:15:24;;;:9;:15;;;;;;;;;;;:44;;;;5408:13;;;;;;;:24;;5426:5;5408:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5392:13:24;;;:9;:13;;;;;;;;;;;;:40;;;;5447:25;;;;;;;5392:13;;5447:25;;;;;;;;;;;;;5223:256;;;:::o;1219:145:21:-;1277:7;1304:6;;;;1296:15;;;;;;-1:-1:-1;1333:5:21;;;1219:145::o;1447:::-;1505:7;1536:5;;;1559:6;;;;1551:15;;;;;;1584:1;1447:145;-1:-1:-1;;;1447:145:21:o;440:151:26:-;542:4;;514:24;532:5;514:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;506:41;;;;;;557:27;569:7;578:5;557:11;:27::i;:::-;440:151;;:::o;693:119:4:-;749:21;:8;762:7;749:21;:12;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;818:127::-;877:24;:8;893:7;877:24;:15;:24;:::i;:::-;916:22;;-1:-1:-1;;;;;916:22:4;;;;;;;;818:127;:::o;794:162:2:-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;5822:263:24:-;-1:-1:-1;;;;;5896:21:24;;;;5888:30;;;;;;5944:12;;:23;;5961:5;5944:23;:16;:23;:::i;:::-;5929:12;:38;-1:-1:-1;;;;;5998:18:24;;:9;:18;;;;;;;;;;;:29;;6021:5;5998:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5977:18:24;;:9;:18;;;;;;;;;;;:50;;;;6042:36;;;;;;;5977:18;;:9;;6042:36;;;;;;;;;;5822:263;;:::o;267:181:2:-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;:18::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;522:184::-;-1:-1:-1;;;;;601:21:2;;;;593:30;;;;;;641:18;645:4;651:7;641:3;:18::i;:::-;633:27;;;;;;;;-1:-1:-1;;;;;671:20:2;694:5;671:20;;;;;;;;;;;:28;;-1:-1:-1;;671:28:2;;;522:184::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./ERC20Mintable.sol\";\n\n/**\n * @title Capped token\n * @dev Mintable token with a token cap.\n */\ncontract ERC20Capped is ERC20Mintable {\n    uint256 private _cap;\n\n    constructor (uint256 cap) public {\n        require(cap > 0);\n        _cap = cap;\n    }\n\n    /**\n     * @return the cap for the token minting.\n     */\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    function _mint(address account, uint256 value) internal {\n        require(totalSupply().add(value) <= _cap);\n        super._mint(account, value);\n    }\n}\n",
  "sourcePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Capped.sol",
  "ast": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Capped.sol",
    "exportedSymbols": {
      "ERC20Capped": [
        2900
      ]
    },
    "id": 2901,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2845,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:26"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 2846,
        "nodeType": "ImportDirective",
        "scope": 2901,
        "sourceUnit": 2987,
        "src": "33:29:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2847,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2986,
              "src": "160:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2986",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2848,
            "nodeType": "InheritanceSpecifier",
            "src": "160:13:26"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          2986,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
        "fullyImplemented": true,
        "id": 2900,
        "linearizedBaseContracts": [
          2900,
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Capped",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2850,
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 2900,
            "src": "180:20:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2849,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2865,
              "nodeType": "Block",
              "src": "240:53:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2856,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2852,
                          "src": "258:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "264:1:26",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "258:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4753,
                        4754
                      ],
                      "referencedDeclaration": 4753,
                      "src": "250:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "250:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "250:16:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2861,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2850,
                      "src": "276:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2862,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2852,
                      "src": "283:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "276:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2864,
                  "nodeType": "ExpressionStatement",
                  "src": "276:10:26"
                }
              ]
            },
            "documentation": null,
            "id": 2866,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2852,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2866,
                  "src": "220:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "219:13:26"
            },
            "returnParameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:26"
            },
            "scope": 2900,
            "src": "207:86:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2873,
              "nodeType": "Block",
              "src": "406:28:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2871,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2850,
                    "src": "423:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2870,
                  "id": 2872,
                  "nodeType": "Return",
                  "src": "416:11:26"
                }
              ]
            },
            "documentation": "@return the cap for the token minting.",
            "id": 2874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:26"
            },
            "returnParameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2874,
                  "src": "397:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:9:26"
            },
            "scope": 2900,
            "src": "361:73:26",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2898,
              "nodeType": "Block",
              "src": "496:95:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2885,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "532:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2882,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2458,
                                "src": "514:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "514:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2234,
                            "src": "514:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "514:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2887,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2850,
                          "src": "542:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "514:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4753,
                        4754
                      ],
                      "referencedDeclaration": 4753,
                      "src": "506:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "506:41:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "506:41:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2894,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "569:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "578:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2891,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4822,
                        "src": "557:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Capped_$2900",
                          "typeString": "contract super ERC20Capped"
                        }
                      },
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2701,
                      "src": "557:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "557:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2897,
                  "nodeType": "ExpressionStatement",
                  "src": "557:27:26"
                }
              ]
            },
            "documentation": null,
            "id": 2899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "455:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2878,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "472:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:32:26"
            },
            "returnParameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:26"
            },
            "scope": 2900,
            "src": "440:151:26",
            "stateMutability": "nonpayable",
            "superFunction": 2701,
            "visibility": "internal"
          }
        ],
        "scope": 2901,
        "src": "136:457:26"
      }
    ],
    "src": "0:594:26"
  },
  "legacyAST": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Capped.sol",
    "exportedSymbols": {
      "ERC20Capped": [
        2900
      ]
    },
    "id": 2901,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2845,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:26"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 2846,
        "nodeType": "ImportDirective",
        "scope": 2901,
        "sourceUnit": 2987,
        "src": "33:29:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2847,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2986,
              "src": "160:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2986",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2848,
            "nodeType": "InheritanceSpecifier",
            "src": "160:13:26"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          2986,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title Capped token\n@dev Mintable token with a token cap.",
        "fullyImplemented": true,
        "id": 2900,
        "linearizedBaseContracts": [
          2900,
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Capped",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2850,
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 2900,
            "src": "180:20:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2849,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2865,
              "nodeType": "Block",
              "src": "240:53:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2856,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2852,
                          "src": "258:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "264:1:26",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "258:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4753,
                        4754
                      ],
                      "referencedDeclaration": 4753,
                      "src": "250:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "250:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "250:16:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2861,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2850,
                      "src": "276:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2862,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2852,
                      "src": "283:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "276:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2864,
                  "nodeType": "ExpressionStatement",
                  "src": "276:10:26"
                }
              ]
            },
            "documentation": null,
            "id": 2866,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2852,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2866,
                  "src": "220:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "219:13:26"
            },
            "returnParameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:26"
            },
            "scope": 2900,
            "src": "207:86:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2873,
              "nodeType": "Block",
              "src": "406:28:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2871,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2850,
                    "src": "423:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2870,
                  "id": 2872,
                  "nodeType": "Return",
                  "src": "416:11:26"
                }
              ]
            },
            "documentation": "@return the cap for the token minting.",
            "id": 2874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:26"
            },
            "returnParameters": {
              "id": 2870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2874,
                  "src": "397:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "396:9:26"
            },
            "scope": 2900,
            "src": "361:73:26",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2898,
              "nodeType": "Block",
              "src": "496:95:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2885,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "532:5:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2882,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2458,
                                "src": "514:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "514:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2234,
                            "src": "514:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "514:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2887,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2850,
                          "src": "542:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "514:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4753,
                        4754
                      ],
                      "referencedDeclaration": 4753,
                      "src": "506:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "506:41:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "506:41:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2894,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "569:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "578:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2891,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4822,
                        "src": "557:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Capped_$2900",
                          "typeString": "contract super ERC20Capped"
                        }
                      },
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2701,
                      "src": "557:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "557:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2897,
                  "nodeType": "ExpressionStatement",
                  "src": "557:27:26"
                }
              ]
            },
            "documentation": null,
            "id": 2899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "455:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2878,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "472:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "454:32:26"
            },
            "returnParameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:26"
            },
            "scope": 2900,
            "src": "440:151:26",
            "stateMutability": "nonpayable",
            "superFunction": 2701,
            "visibility": "internal"
          }
        ],
        "scope": 2901,
        "src": "136:457:26"
      }
    ],
    "src": "0:594:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-08T18:19:55.624Z",
  "devdoc": {
    "details": "Mintable token with a token cap.",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Capped token"
  },
  "userdoc": {
    "methods": {}
  }
}