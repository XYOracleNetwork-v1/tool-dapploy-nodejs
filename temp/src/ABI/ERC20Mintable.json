{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"ERC20Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/Roles.sol\":{\"keccak256\":\"0xa30e5f668ab6f9079aaae2271e42d97c058d59651cb07028d3e44b8e1acdc96a\",\"urls\":[\"bzzr://c56f8b2dcdf5e02fcd5ada3f178f05b71c74e88e29bdc1fe64074293cc9be0c0\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x07f254396554f3dd46d073769ff862fe914d71895cfdd92722537e77c38b166f\",\"urls\":[\"bzzr://6c4112098c87d84d52166aa8c646d48494e8191e15da3065679737eb3828aa65\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc31006228f03130fa677c7e7769b8fd0b1c5257deedae3fc278eb542b33c3059\",\"urls\":[\"bzzr://261b657d8d26013b2d3f95554f7f2ec853851ceec6333940d016feadff8b435a\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x81dd4c59df675b77477ab7664802174cf8f2ccb3400b69960d1c47b5ff6f4899\",\"urls\":[\"bzzr://a49fb52477c644071e73e8a84f3486ea0955270d0c9a1c00c543957ee7119346\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xeeacb7ae762f1505d5481d692c262b05334107920186bf029eaab67994d7b42c\",\"urls\":[\"bzzr://905d081f40db4205aaa8a252991681658e680ed86f19cc4f73033dfd26bb9454\"]},\"/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x44c46ef4a8099c5cc0cbc85c55dccc33481d69b9f1f10f9fe45e49394780b8d5\",\"urls\":[\"bzzr://8e7fcb5849e3955bb5d2698baf3e526a14344d26db92422e9c70c71ef83429ef\"]}},\"version\":1}",
  "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b6100336003826401000000006107de61006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6108a4806101076000396000f3fe6080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd1461010b57806323b872dd14610132578063395093511461017557806340c10f19146101ae57806370a08231146101e7578063983b2d561461021a578063986502751461024f578063a457c2d714610264578063a9059cbb1461029d578063aa271e1a146102d6578063dd62ed3e14610309575b600080fd5b3480156100ca57600080fd5b506100f7600480360360408110156100e157600080fd5b50600160a060020a038135169060200135610344565b604080519115158252519081900360200190f35b34801561011757600080fd5b5061012061035a565b60408051918252519081900360200190f35b34801561013e57600080fd5b506100f76004803603606081101561015557600080fd5b50600160a060020a03813581169160208101359091169060400135610360565b34801561018157600080fd5b506100f76004803603604081101561019857600080fd5b50600160a060020a0381351690602001356103b7565b3480156101ba57600080fd5b506100f7600480360360408110156101d157600080fd5b50600160a060020a0381351690602001356103f3565b3480156101f357600080fd5b506101206004803603602081101561020a57600080fd5b5035600160a060020a0316610413565b34801561022657600080fd5b5061024d6004803603602081101561023d57600080fd5b5035600160a060020a031661042e565b005b34801561025b57600080fd5b5061024d61044e565b34801561027057600080fd5b506100f76004803603604081101561028757600080fd5b50600160a060020a038135169060200135610459565b3480156102a957600080fd5b506100f7600480360360408110156102c057600080fd5b50600160a060020a038135169060200135610495565b3480156102e257600080fd5b506100f7600480360360208110156102f957600080fd5b5035600160a060020a03166104a2565b34801561031557600080fd5b506101206004803603604081101561032c57600080fd5b50600160a060020a03813581169160200135166104bb565b60006103513384846104e6565b50600192915050565b60025490565b600061036d848484610572565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103ad9186916103a8908663ffffffff61063f16565b6104e6565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103519185906103a8908663ffffffff61065416565b60006103fe336104a2565b151561040957600080fd5b610351838361066d565b600160a060020a031660009081526020819052604090205490565b610437336104a2565b151561044257600080fd5b61044b81610717565b50565b6104573361075f565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103519185906103a8908663ffffffff61063f16565b6000610351338484610572565b60006104b560038363ffffffff6107a716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03821615156104fb57600080fd5b600160a060020a038316151561051057600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561058757600080fd5b600160a060020a0383166000908152602081905260409020546105b0908263ffffffff61063f16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546105e5908263ffffffff61065416565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561064e57600080fd5b50900390565b60008282018381101561066657600080fd5b9392505050565b600160a060020a038216151561068257600080fd5b600254610695908263ffffffff61065416565b600255600160a060020a0382166000908152602081905260409020546106c1908263ffffffff61065416565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61072860038263ffffffff6107de16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61077060038263ffffffff61082c16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156107be57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156107f357600080fd5b6107fd82826107a7565b1561080757600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561084157600080fd5b61084b82826107a7565b151561085657600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f50bfc34ca5bfa2ddecd3b2e628d2cd231dfe304c75a0948dae5cd2dd8f3c44f0029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd1461010b57806323b872dd14610132578063395093511461017557806340c10f19146101ae57806370a08231146101e7578063983b2d561461021a578063986502751461024f578063a457c2d714610264578063a9059cbb1461029d578063aa271e1a146102d6578063dd62ed3e14610309575b600080fd5b3480156100ca57600080fd5b506100f7600480360360408110156100e157600080fd5b50600160a060020a038135169060200135610344565b604080519115158252519081900360200190f35b34801561011757600080fd5b5061012061035a565b60408051918252519081900360200190f35b34801561013e57600080fd5b506100f76004803603606081101561015557600080fd5b50600160a060020a03813581169160208101359091169060400135610360565b34801561018157600080fd5b506100f76004803603604081101561019857600080fd5b50600160a060020a0381351690602001356103b7565b3480156101ba57600080fd5b506100f7600480360360408110156101d157600080fd5b50600160a060020a0381351690602001356103f3565b3480156101f357600080fd5b506101206004803603602081101561020a57600080fd5b5035600160a060020a0316610413565b34801561022657600080fd5b5061024d6004803603602081101561023d57600080fd5b5035600160a060020a031661042e565b005b34801561025b57600080fd5b5061024d61044e565b34801561027057600080fd5b506100f76004803603604081101561028757600080fd5b50600160a060020a038135169060200135610459565b3480156102a957600080fd5b506100f7600480360360408110156102c057600080fd5b50600160a060020a038135169060200135610495565b3480156102e257600080fd5b506100f7600480360360208110156102f957600080fd5b5035600160a060020a03166104a2565b34801561031557600080fd5b506101206004803603604081101561032c57600080fd5b50600160a060020a03813581169160200135166104bb565b60006103513384846104e6565b50600192915050565b60025490565b600061036d848484610572565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103ad9186916103a8908663ffffffff61063f16565b6104e6565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103519185906103a8908663ffffffff61065416565b60006103fe336104a2565b151561040957600080fd5b610351838361066d565b600160a060020a031660009081526020819052604090205490565b610437336104a2565b151561044257600080fd5b61044b81610717565b50565b6104573361075f565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103519185906103a8908663ffffffff61063f16565b6000610351338484610572565b60006104b560038363ffffffff6107a716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03821615156104fb57600080fd5b600160a060020a038316151561051057600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561058757600080fd5b600160a060020a0383166000908152602081905260409020546105b0908263ffffffff61063f16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546105e5908263ffffffff61065416565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561064e57600080fd5b50900390565b60008282018381101561066657600080fd5b9392505050565b600160a060020a038216151561068257600080fd5b600254610695908263ffffffff61065416565b600255600160a060020a0382166000908152602081905260409020546106c1908263ffffffff61065416565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61072860038263ffffffff6107de16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61077060038263ffffffff61082c16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156107be57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156107f357600080fd5b6107fd82826107a7565b1561080757600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561084157600080fd5b61084b82826107a7565b151561085657600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f50bfc34ca5bfa2ddecd3b2e628d2cd231dfe304c75a0948dae5cd2dd8f3c44f0029",
  "sourceMap": "160:421:28:-;;;283:22:4;294:10;283;;;;:22;:::i;:::-;160:421:28;;693:119:4;749:21;:8;762:7;749:12;;;;;;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;267:181:2:-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;;;;:18;:::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;794:162::-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;160:421:28:-;;;;;;;",
  "deployedSourceMap": "160:421:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:145:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2729:145:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2729:145:24;;;;;;;;;;;;;;;;;;;;;;;;;;;924:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;924:89:24;;;;;;;;;;;;;;;;;;;;3337:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:224:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3337:224:24;;;;;;;;;;;;;;;;;;4075:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4075:200:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4075:200:24;;;;;;;;;451:128:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:128:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;451:128:28;;;;;;;;;1225:104:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:104:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1225:104:24;-1:-1:-1;;;;;1225:104:24;;;516:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:90:4;-1:-1:-1;;;;;516:90:4;;;;;612:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:75:4;;;;4794:210:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4794:210:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4794:210:24;;;;;;;;;1956:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:137:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1956:137:24;;;;;;;;;403:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;403:107:4;-1:-1:-1;;;;;403:107:4;;;1660:129:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:129:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1660:129:24;;;;;;;;;;;2729:145;2794:4;2810:36;2819:10;2831:7;2840:5;2810:8;:36::i;:::-;-1:-1:-1;2863:4:24;2729:145;;;;:::o;924:89::-;994:12;;924:89;:::o;3337:224::-;3416:4;3432:26;3442:4;3448:2;3452:5;3432:9;:26::i;:::-;-1:-1:-1;;;;;3495:14:24;;;;;;:8;:14;;;;;;;;3483:10;3495:26;;;;;;;;;3468:65;;3477:4;;3495:37;;3526:5;3495:37;:30;:37;:::i;:::-;3468:8;:65::i;:::-;-1:-1:-1;3550:4:24;3337:224;;;;;:::o;4075:200::-;4180:10;4155:4;4201:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4201:29:24;;;;;;;;;;4155:4;;4171:76;;4192:7;;4201:45;;4235:10;4201:45;:33;:45;:::i;451:128:28:-;519:4;358:20:4;367:10;358:8;:20::i;:::-;350:29;;;;;;;;535:16:28;541:2;545:5;535;:16::i;1225:104:24:-;-1:-1:-1;;;;;1306:16:24;1280:7;1306:16;;;;;;;;;;;;1225:104::o;516:90:4:-;358:20;367:10;358:8;:20::i;:::-;350:29;;;;;;;;580:19;591:7;580:10;:19::i;:::-;516:90;:::o;612:75::-;655:25;669:10;655:13;:25::i;:::-;612:75::o;4794:210:24:-;4904:10;4879:4;4925:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4925:29:24;;;;;;;;;;4879:4;;4895:81;;4916:7;;4925:50;;4959:15;4925:50;:33;:50;:::i;1956:137::-;2017:4;2033:32;2043:10;2055:2;2059:5;2033:9;:32::i;403:107:4:-;459:4;482:21;:8;495:7;482:21;:12;:21;:::i;:::-;475:28;403:107;-1:-1:-1;;403:107:4:o;1660:129:24:-;-1:-1:-1;;;;;1758:15:24;;;1732:7;1758:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1660:129::o;6839:248::-;-1:-1:-1;;;;;6931:21:24;;;;6923:30;;;;;;-1:-1:-1;;;;;6971:19:24;;;;6963:28;;;;;;-1:-1:-1;;;;;7002:15:24;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7049:31;;;;;;;;;;;;;;;;;6839:248;;;:::o;5223:256::-;-1:-1:-1;;;;;5310:16:24;;;;5302:25;;;;;;-1:-1:-1;;;;;5356:15:24;;:9;:15;;;;;;;;;;;:26;;5376:5;5356:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5338:15:24;;;:9;:15;;;;;;;;;;;:44;;;;5408:13;;;;;;;:24;;5426:5;5408:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5392:13:24;;;:9;:13;;;;;;;;;;;;:40;;;;5447:25;;;;;;;5392:13;;5447:25;;;;;;;;;;;;;5223:256;;;:::o;1219:145:21:-;1277:7;1304:6;;;;1296:15;;;;;;-1:-1:-1;1333:5:21;;;1219:145::o;1447:::-;1505:7;1536:5;;;1559:6;;;;1551:15;;;;;;1584:1;1447:145;-1:-1:-1;;;1447:145:21:o;5822:263:24:-;-1:-1:-1;;;;;5896:21:24;;;;5888:30;;;;;;5944:12;;:23;;5961:5;5944:23;:16;:23;:::i;:::-;5929:12;:38;-1:-1:-1;;;;;5998:18:24;;:9;:18;;;;;;;;;;;:29;;6021:5;5998:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5977:18:24;;:9;:18;;;;;;;;;;;:50;;;;6042:36;;;;;;;5977:18;;:9;;6042:36;;;;;;;;;;5822:263;;:::o;693:119:4:-;749:21;:8;762:7;749:21;:12;:21;:::i;:::-;785:20;;-1:-1:-1;;;;;785:20:4;;;;;;;;693:119;:::o;818:127::-;877:24;:8;893:7;877:24;:15;:24;:::i;:::-;916:22;;-1:-1:-1;;;;;916:22:4;;;;;;;;818:127;:::o;794:162:2:-;866:4;-1:-1:-1;;;;;890:21:2;;;;882:30;;;;;;-1:-1:-1;;;;;;929:20:2;:11;:20;;;;;;;;;;;;;;;794:162::o;267:181::-;-1:-1:-1;;;;;343:21:2;;;;335:30;;;;;;384:18;388:4;394:7;384:3;:18::i;:::-;383:19;375:28;;;;;;-1:-1:-1;;;;;414:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;414:27:2;437:4;414:27;;;267:181::o;522:184::-;-1:-1:-1;;;;;601:21:2;;;;593:30;;;;;;641:18;645:4;651:7;641:3;:18::i;:::-;633:27;;;;;;;;-1:-1:-1;;;;;671:20:2;694:5;671:20;;;;;;;;;;;:28;;-1:-1:-1;;671:28:2;;;522:184::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        2986
      ]
    },
    "id": 2987,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2960,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:28"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2961,
        "nodeType": "ImportDirective",
        "scope": 2987,
        "sourceUnit": 2813,
        "src": "33:21:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2962,
        "nodeType": "ImportDirective",
        "scope": 2987,
        "sourceUnit": 404,
        "src": "55:43:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2963,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2812,
              "src": "186:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2812",
                "typeString": "contract ERC20"
              }
            },
            "id": 2964,
            "nodeType": "InheritanceSpecifier",
            "src": "186:5:28"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2965,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 403,
              "src": "193:10:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$403",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2966,
            "nodeType": "InheritanceSpecifier",
            "src": "193:10:28"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 2986,
        "linearizedBaseContracts": [
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2984,
              "nodeType": "Block",
              "src": "525:54:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2978,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2968,
                        "src": "541:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2979,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "545:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2977,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "535:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "535:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "568:4:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2976,
                  "id": 2983,
                  "nodeType": "Return",
                  "src": "561:11:28"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2985,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2973,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2972,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 336,
                  "src": "499:10:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "499:10:28"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "465:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2970,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "477:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:27:28"
            },
            "returnParameters": {
              "id": 2976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2975,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "519:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:6:28"
            },
            "scope": 2986,
            "src": "451:128:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2987,
        "src": "160:421:28"
      }
    ],
    "src": "0:582:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        2986
      ]
    },
    "id": 2987,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2960,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:28"
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2961,
        "nodeType": "ImportDirective",
        "scope": 2987,
        "sourceUnit": 2813,
        "src": "33:21:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kevin/GitHub/tool-dapploy-nodejs/temp/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2962,
        "nodeType": "ImportDirective",
        "scope": 2987,
        "sourceUnit": 404,
        "src": "55:43:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2963,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2812,
              "src": "186:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2812",
                "typeString": "contract ERC20"
              }
            },
            "id": 2964,
            "nodeType": "InheritanceSpecifier",
            "src": "186:5:28"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2965,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 403,
              "src": "193:10:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$403",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2966,
            "nodeType": "InheritanceSpecifier",
            "src": "193:10:28"
          }
        ],
        "contractDependencies": [
          403,
          2812,
          3157
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 2986,
        "linearizedBaseContracts": [
          2986,
          403,
          2812,
          3157
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2984,
              "nodeType": "Block",
              "src": "525:54:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2978,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2968,
                        "src": "541:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2979,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "545:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2977,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "535:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2981,
                  "nodeType": "ExpressionStatement",
                  "src": "535:16:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "568:4:28",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2976,
                  "id": 2983,
                  "nodeType": "Return",
                  "src": "561:11:28"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2985,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2973,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2972,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 336,
                  "src": "499:10:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "499:10:28"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "465:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2970,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "477:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:27:28"
            },
            "returnParameters": {
              "id": 2976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2975,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "519:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "518:6:28"
            },
            "scope": 2986,
            "src": "451:128:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2987,
        "src": "160:421:28"
      }
    ],
    "src": "0:582:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-08T18:19:55.625Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}